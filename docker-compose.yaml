services:
  postgres:
    image: postgres:14.5
    container_name: db_postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
    restart: always
    env_file:
      - ./.env
    volumes:
      - postgres_data:/data
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.5
    container_name: db_redis
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  auth_service:
    image: auth_service
    container_name: auth_service
    restart: always
    build: ./src
    depends_on:
      postgres:
           condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/auth_api_1
    env_file:
      - ./.env

  nginx:
    image: nginx:1.23.2
    container_name: nginx
    volumes:
      - ./previous_sprints/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./previous_sprints/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - auth_service
    ports:
      - "80:80"

volumes:
  postgres_data:
  redis_data: